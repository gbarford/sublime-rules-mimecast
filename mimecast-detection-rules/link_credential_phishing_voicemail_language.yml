attack_types:
- Credential Phishing
description: |-
  This rule detects a common credential phishing vector enticing the user to engage with links under the premise that they have a voicemail to retrieve.
  The rule looks for voicemail verbiage in the display name, body, subject or a combination of those elements with emojis or a medium to high credential theft NLU Intent from first-time + unsolicited sender.
detection_methods:
- Content analysis
- Natural Language Understanding
- Sender analysis
- URL analysis
id: 74ba7787-e543-5ce8-b6eb-e1ecdb8f1d67
name: Fake voicemail notification (untrusted sender)
severity: medium
source: "type.inbound\nand length(body.links) < 5\n// voicemail related\nand (\n \
  \ any([subject.subject, sender.display_name, ],\n      regex.icontains(.,\n    \
  \                  '(voice|audio|call|missed|caii)(\\s?|-)(mail|message|recording|call|caii)|transcription|\\\
  ([0-9]{3}\\).(\\*\\*\\*|[0-9]{3}).\\*\\*\\*'\n      )\n      or regex.icontains(body.current_thread.text,\n\
  \                         '(voice|audio|call|missed|caii)(\\s?|-)(mail|message|recording|call|caii)|transcription|\\\
  ([0-9]{3}\\).(\\*\\*\\*|[0-9]{3}).\\*\\*\\*'\n      )\n  )\n)\nand 2 of (\n  (\n\
  \    any(ml.nlu_classifier(body.current_thread.text).intents,\n        .name in\
  \ (\"cred_theft\") and .confidence in (\"medium\", \"high\")\n    )\n  ),\n  (\n\
  \    regex.icontains(sender.display_name,\n                    '(voice|audio|call|missed|caii)(\\\
  s?|-)(mail|message|recording|call|caii)|transcription'\n    )\n  ),\n  (\n    length(body.current_thread.text)\
  \ < 700\n    and any([body.current_thread.text],\n            regex.icontains(.,\
  \ 'M\xE9ss\xE3ge|M\xE9ssage|Rec\xE9ived|Addr\xE9ss')\n    )\n  ),\n  (\n    // sender\
  \ domain matches no body domains\n    all(body.links,\n         not(strings.ends_with(.href_url.query_params,sender.email.domain.root_domain))\n\
  \        and  not(any($org_domains, strings.ends_with(..href_url.query_params,.)))\n\
  \        and  not(any([\n          \"unitelvoice.com\",\n          \"googleapis.com\"\
  ,\n          \"dialmycalls.com\",\n          \"ringcentral.biz\"\n        ], strings.ends_with(..href_url.query_params,.)))\n\
  \    )\n  ),\n  (\n    any(body.links,\n        regex.contains(.display_text, '[^a-z]*[A-Z][^a-z]*')\n\
  \        and regex.icontains(.display_text,\n                            '(voice|audio|call|missed|caii)(\\\
  s?|-)(mail|message|recording|call|caii)|transcription'\n        )\n    )\n  ),\n\
  \  (\n    any(body.links,\n        beta.whois(.href_url.domain).days_old < 10\n\
  \        and not strings.icontains(.href_url.path, \"unsubscribe\")\n    )\n  ),\n\
  \  (\n    // recipient's SLD is in the sender's display name\n    any(recipients.to,\n\
  \        strings.icontains(sender.display_name, .email.domain.sld)\n    )\n  ),\n\
  \  (\n    any([sender.display_name, subject.subject],\n        regex.contains(.,\n\
  \                       '[\\x{1F300}-\\x{1F5FF}\\x{1F600}-\\x{1F64F}\\x{1F680}-\\\
  x{1F6FF}\\x{1F700}-\\x{1F77F}\\x{1F780}-\\x{1F7FF}\\x{1F900}-\\x{1F9FF}\\x{2600}-\\\
  x{26FF}\\x{2700}-\\x{27BF}\\x{2300}-\\x{23FF}]'\n        )\n    )\n  ),\n)\n\n//\
  \ negating legit replies and legitimate audio file attachments and known voicemail\
  \ senders\nand sender.email.domain.root_domain not in (\n  \"magicjack.com\",\n\
  \  \"unitelvoice.com\",\n  \"voipinterface.net\",\n  \"ringcentral.biz\"\n)\nand\
  \ not any(attachments, strings.starts_with(.content_type, \"audio\"))\nand not (\n\
  \  (\n    strings.istarts_with(subject.subject, \"RE:\")\n    // out of office auto-reply\n\
  \    // the NLU model will handle these better natively soon\n    or strings.istarts_with(subject.subject,\
  \ \"Automatic reply:\")\n  )\n  and (\n    length(headers.references) > 0\n    or\
  \ any(headers.hops, any(.fields, strings.ilike(.name, \"In-Reply-To\")))\n  )\n\
  )\nand (\n  (\n    profile.by_sender().prevalence in (\"new\", \"outlier\")\n  \
  \  and not profile.by_sender().solicited\n  )\n  or (\n    profile.by_sender().any_messages_malicious_or_spam\n\
  \    and not profile.by_sender().any_false_positives\n  )\n)"
tactics_and_techniques:
- Social engineering
tags:
- Mimecast Hard to Fix
type: rule
